// -------------------------------------------------------------------------------
// GRUNTFILE
// Loading and registering grunt tasks. Shared Grunt config file variables.
// http://gruntjs.com
// -------------------------------------------------------------------------------

module.exports = function(grunt) {
	'use strict';



	// -------------------------------------------------
	// SHARED VARIABLES
	// -------------------------------------------------

	var gruntScope = {

		// COMMENT BANNER
		// Placed on generated files to warn developers not to edit `dist files directly.
		commentBanner: '/*\nWARNING: Do not edit this file! It is generated automatically from multiple source files.\nLAST MODIFIED: <%= grunt.template.today("yyyy-mm-dd h:MM:ss TT") %>\n*/\n',

		// HTML FILES
		// cwd: src/
		srcHtmlFiles: ['src/*.html'],
		distHtmlFiles: ['dist/*.html'],

		// SASS/CSS FILES
		srcSassFiles: ['src/*.scss', 'src/components/**/*.scss'],
		srcMainSassFile: 'src/main.scss',
		distMainCssFile: 'dist/all.min.css',

		// JS FILES
		srcJsFiles: ['src/*.js', 'src/components/**/*.js'],
		distMainJsFile: 'dist/all.min.js',
		gruntConfigFiles: ['Gruntfile.js', 'grunt-configs/*.js'],
	};



	// -------------------------------------------------
	// CONFIG
	// -------------------------------------------------

	// GLOBAL CONFIG
	grunt.initConfig({
		pkg: require('./package.json'),

		// Pass shared variables to be used by external config files.
		gruntScope: gruntScope
	});

	// LOAD TASKS
	// Load tasks automatically with 'load-grunt-tasks' plugin.
	require('load-grunt-tasks')(grunt);

	// TASK CONFIGS
	// Load per-task configs from seperate files.
	grunt.loadTasks('grunt-configs/');



	// -------------------------------------------------
	// REGISTER TASKS
	// -------------------------------------------------

	// DEFAULT
	// Runs all tasks
	// Run 'grunt'
	grunt.registerTask('default', [
		'htmlmin',
		'scsslint',
		'sass:dist',
		'autoprefixer',
		'jshint',
		'uglify:dist'
	]);

	// SERVE
	// Starts a server and a watch for live reloading.
	// Run 'grunt serve'
	grunt.registerTask('serve', [
		'browserSync',
		'watch'
	]);

	// DEBUG
	// Runs `grunt serve`, but with prettified code for debugging.
	// Run 'grunt serve:debug'
	grunt.registerTask('serve:debug', [
		'browserSync',
		'watch'
	]);
};
